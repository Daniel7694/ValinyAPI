// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Valiny.Data;

#nullable disable

namespace Valiny.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Valiny.Models.Administrativo", b =>
                {
                    b.Property<int>("ID_Admin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Admin"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Clave")
                        .HasColumnType("int");

                    b.Property<int>("ID_Documento")
                        .HasColumnType("int");

                    b.Property<int>("ID_Genero")
                        .HasColumnType("int");

                    b.Property<int>("ID_Rol")
                        .HasColumnType("int");

                    b.Property<string>("P_Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("P_Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S_Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("T_Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Admin");

                    b.HasIndex("ID_Clave");

                    b.HasIndex("ID_Documento");

                    b.HasIndex("ID_Genero");

                    b.HasIndex("ID_Rol");

                    b.ToTable("Administrativos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Administrativo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Valiny.Models.Clave", b =>
                {
                    b.Property<int>("ID_Clave")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Clave"));

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Clave");

                    b.ToTable("Claves");
                });

            modelBuilder.Entity("Valiny.Models.Curso", b =>
                {
                    b.Property<int>("ID_Curso")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Curso"));

                    b.Property<int>("Num_Curso")
                        .HasColumnType("int");

                    b.HasKey("ID_Curso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Valiny.Models.Estudiante", b =>
                {
                    b.Property<int>("ID_Estudiante")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Estudiante"));

                    b.Property<int>("ID_Admin")
                        .HasColumnType("int");

                    b.Property<int>("ID_Curso")
                        .HasColumnType("int");

                    b.Property<int>("ID_Documento")
                        .HasColumnType("int");

                    b.Property<int>("ID_Genero")
                        .HasColumnType("int");

                    b.Property<int>("ID_Registro")
                        .HasColumnType("int");

                    b.Property<string>("P_Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("P_Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S_Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S_Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("T_Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Estudiante");

                    b.HasIndex("ID_Admin");

                    b.HasIndex("ID_Curso");

                    b.HasIndex("ID_Documento");

                    b.HasIndex("ID_Genero");

                    b.HasIndex("ID_Registro");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Valiny.Models.Genero", b =>
                {
                    b.Property<int>("ID_Genero")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Genero"));

                    b.Property<string>("Nom_Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Genero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Valiny.Models.Registro", b =>
                {
                    b.Property<int>("ID_Registro")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Registro"));

                    b.Property<string>("Nom_Registro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Registro");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("Valiny.Models.Rol", b =>
                {
                    b.Property<int>("ID_Rol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Rol"));

                    b.Property<string>("Nombre_Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Rol");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("Valiny.Models.T_Documento", b =>
                {
                    b.Property<int>("ID_Documento")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Documento"));

                    b.Property<string>("Tipo_Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Documento");

                    b.ToTable("T_Documentos");
                });

            modelBuilder.Entity("Valiny.Models.Directivo", b =>
                {
                    b.HasBaseType("Valiny.Models.Administrativo");

                    b.HasDiscriminator().HasValue("Directivo");
                });

            modelBuilder.Entity("Valiny.Models.Orientador", b =>
                {
                    b.HasBaseType("Valiny.Models.Administrativo");

                    b.HasDiscriminator().HasValue("Orientador");
                });

            modelBuilder.Entity("Valiny.Models.Docente", b =>
                {
                    b.HasBaseType("Valiny.Models.Orientador");

                    b.HasDiscriminator().HasValue("Docente");
                });

            modelBuilder.Entity("Valiny.Models.Administrativo", b =>
                {
                    b.HasOne("Valiny.Models.Clave", "IdClave")
                        .WithMany()
                        .HasForeignKey("ID_Clave")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.T_Documento", "IdDocumento")
                        .WithMany()
                        .HasForeignKey("ID_Documento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.Genero", "IdGenero")
                        .WithMany()
                        .HasForeignKey("ID_Genero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.Rol", "IdRol")
                        .WithMany()
                        .HasForeignKey("ID_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClave");

                    b.Navigation("IdDocumento");

                    b.Navigation("IdGenero");

                    b.Navigation("IdRol");
                });

            modelBuilder.Entity("Valiny.Models.Estudiante", b =>
                {
                    b.HasOne("Valiny.Models.Administrativo", "IdAdmin")
                        .WithMany()
                        .HasForeignKey("ID_Admin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.Curso", "IdCurso")
                        .WithMany()
                        .HasForeignKey("ID_Curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.T_Documento", "IdDocumento")
                        .WithMany()
                        .HasForeignKey("ID_Documento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.Genero", "IdGenero")
                        .WithMany()
                        .HasForeignKey("ID_Genero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Valiny.Models.Registro", "IdRegistro")
                        .WithMany()
                        .HasForeignKey("ID_Registro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAdmin");

                    b.Navigation("IdCurso");

                    b.Navigation("IdDocumento");

                    b.Navigation("IdGenero");

                    b.Navigation("IdRegistro");
                });
#pragma warning restore 612, 618
        }
    }
}
